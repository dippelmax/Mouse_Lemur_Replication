y = "mean seedling length (mm)", x = "Treatment") +
theme(plot.title = element_text(face = "italic")) +
theme(plot.subtitle = element_text(hjust = 0.5)) +
scale_color_manual(values=c("darkgreen", "darkorange3")) +
scale_fill_manual(values=c("darkgreen", "darkorange3")) +
theme(legend.position = "None")
plot1
plot2 <- ggplot(data = jollyae_semi_yes, aes(x = treatment, y = seedling_mm)) +
theme_bw() + geom_violin( aes(colour = treatment, fill = treatment)) +
stat_summary(fun = mean, geom="point", shape=23, size=5, fill = "black") +
ylim(0,50) +
labs(title = "",subtitle = "Semi-shaded",
y = "mean seedling length (mm)", x = "Treatment") +
theme(plot.title = element_text(face = "italic")) +
theme(plot.subtitle = element_text(hjust = 0.5)) +
scale_color_manual(values=c("darkgreen", "darkorange3")) +
scale_fill_manual(values=c("darkgreen", "darkorange3")) +
theme(legend.position = "None") +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.title.y = element_blank())
plot2
plot3 <- ggplot(data = jollyae_closed_yes, aes(x = treatment, y = seedling_mm)) +
theme_bw() + geom_violin( aes(colour = treatment, fill = treatment)) +
stat_summary(fun = mean, geom="point", shape=23, size=5, fill = "black") +
ylim(0,50) +
labs(title = "",subtitle = "Shaded",
y = "mean seedling length (mm)", x = "Treatment") +
theme(plot.title = element_text(face = "italic")) +
theme(plot.subtitle = element_text(hjust = 0.5)) +
scale_color_manual(values=c("darkgreen", "darkorange3")) +
scale_fill_manual(values=c("darkgreen", "darkorange3")) +
theme(legend.position = "None") +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.title.y = element_blank())
plot3
ggarrange(plot1, plot2, plot3, ncol = 3, nrow = 1)
# Points of departure
# Included all points (original graph cut of at 60 with an "a" on top)
# Notes
# As seen by the font differences on the original graph,
# the N numbers were written in word
# Semi-shaded violin plot points missing >10 on replication
########################################################################
#
#
#
#
#
#
##################### graph 2, survival analysis #######################
#
#
#
#
#
#
#########################################################################
# This is the survival analysis for seeds dispersed by microcebus rufus in the petri dish experiment
rufus_petri_yes
##### Creating a status colum to indicate that all of the seeds germinated at some point
rufus_petri_yes$status <- rep(1, times = 121, length.out = NA, each = 1)
#### Next we use the survival function to make a survival curve
rufus_petri_yes_km_fit <- survfit(Surv(germ_time, status) ~ treatment, data = rufus_petri_yes)
rufus_petri_yes_km_fit
# This give a nice summary of the analysis
summary(rufus_petri_yes_km_fit, times = c(1,15,30,45,60,75,90))
# Next we plot the survival fit and make it look like the graph in the paper
rufus_petri_yes_km_plot <- autoplot(rufus_petri_yes_km_fit)
rufus_petri_yes_km_plot + labs(title = "Microcebus rufus",subtitle = "Petri dish experiment",
y = "Probability of germinating", x = "Time (days)") +
theme(plot.title = element_text(face = "italic")) +
scale_color_manual(values=c("darkgreen", "darkorange3")) +
scale_fill_manual(values=c("darkgreen", "darkorange3")) +
geom_text(x=75, y=.2, label="p < 0.0001") + theme(legend.position="bottom")
# One problem though is that this graph is upside down. I used scale_y_reverse() to reverse the scale,
# but now the numbers are wrong and the annotated p value is gone.
rufus_petri_yes_km_plot + labs(title = "Microcebus rufus",subtitle = "Petri dish experiment",
y = "Probability of germinating", x = "Time (days)") +
theme(plot.title = element_text(face = "italic")) +
scale_color_manual(values=c("darkgreen", "darkorange3")) +
scale_fill_manual(values=c("darkgreen", "darkorange3")) +
geom_text(x=75, y=.75, label="p < 0.0001") + theme(legend.position="bottom") + scale_y_reverse()
# This the the Cox test with fragility
# The summary includes the Chi square value, the degrees of freedom and the p-value
# Those are all things which I need to create the table in the paper
rufus_petri_yes_cox <- coxph(Surv(germ_time, status) ~ treatment, data=rufus_petri_yes)
summary(rufus_petri_yes_cox)
#
#
#
############################## rufus ground yes survival analysis #######################################
#
#
#
# This is the survival analysis for seeds dispersed by microcebus rufus in the forest ground experiment
rufus_ground_yes
nrow(rufus_ground_yes)
##### Creating a status colum to indicate that all of the seeds germinated at some point
rufus_ground_yes$status <- rep(1, times = 7, length.out = NA, each = 1)
#### Next we use the survival function to make a survival curve
rufus_ground_yes_km_fit <- survfit(Surv(germ_time, status) ~ 1, data = rufus_ground_yes)
rufus_ground_yes_km_fit
# This gives a nice summary of the analysis
summary(rufus_ground_yes_km_fit, times = c(1,15,30,45,60,75,90))
# Next we plot the survival fit and make it look like the graph in the paper
rufus_ground_yes_km_plot <- autoplot(rufus_ground_yes_km_fit)
rufus_ground_yes_km_plot + labs(title = "Microcebus rufus",subtitle = "Forest ground experiment",
y = "Probability of germinating", x = "Time (days)") +
theme(plot.title = element_text(face = "italic")) +
scale_color_manual(values=c("darkorange3")) +
scale_fill_manual(values=c("darkorange3")) + theme(legend.position="bottom")
# Does not have color
# One problem though is that this graph is upside down. I used scale_y_reverse() to reverse the scale,
# but now the numbers are wrong and the annotated p value is gone.
rufus_ground_yes_km_plot + labs(title = "Microcebus rufus",subtitle = "Forest ground experiment",
y = "Probability of germinating", x = "Time (days)") +
theme(plot.title = element_text(face = "italic")) +
scale_color_manual(values=c("darkorange3")) +
scale_fill_manual(values=c( "darkorange3")) + theme(legend.position="bottom") + scale_y_reverse()
# Does not have color
# There is no chi square analysis for the Microcebus rufus forest ground experiment because there is only one treatment
#
#
#
############################## jollyae petri yes survival analysis #######################################
#
#
#
# This is the survival analysis for seeds dispersed by microcebus jollyae in the petri dish experiment
jollyae_petri_yes
nrow(jollyae_petri_yes)
##### Creating a status colum to indicate that all of the seeds germinated at some point
jollyae_petri_yes$status <- rep(1, times = 70, length.out = NA, each = 1)
#### Next we use the survival function to make a survival curve
jollyae_petri_yes_km_fit <- survfit(Surv(germ_time, status) ~ treatment, data = jollyae_petri_yes)
jollyae_petri_yes_km_fit
# This give a nice summary of the analysis
summary(jollyae_petri_yes_km_fit, times = c(1,15,30,45,60,75,90))
# Next we plot the survival fit and make it look like the graph in the paper
jollyae_petri_yes_km_plot <- autoplot(jollyae_petri_yes_km_fit)
jollyae_petri_yes_km_plot
# Error: Aesthetics can not vary with a ribbon
jollyae_petri_yes_km_plot + labs(title = "Microcebus jollyae",subtitle = "Petri dish experiment",
y = "Probability of germinating", x = "Time (days)") +
theme(plot.title = element_text(face = "italic")) +
scale_color_manual(values=c("darkgreen", "darkorange3")) +
scale_fill_manual(values=c("darkgreen", "darkorange3")) +
geom_text(x=75, y=.2, label="p < 0.0001") + theme(legend.position="bottom")
# One problem though is that this graph is upside down. I used scale_y_reverse() to reverse the scale,
# but now the numbers are wrong and the annotated p value is gone.
jollyae_petri_yes_km_plot + labs(title = "Microcebus jollyae",subtitle = "Petri dish experiment",
y = "Probability of germinating", x = "Time (days)") +
theme(plot.title = element_text(face = "italic")) +
scale_color_manual(values=c("darkgreen", "darkorange3")) +
scale_fill_manual(values=c("darkgreen", "darkorange3")) +
geom_text(x=75, y=.75, label="p < 0.0001") + theme(legend.position="bottom") + scale_y_reverse()
# This the the Cox test with fragility
# The summary includes the Chi square value, the degrees of freedom and the p-value
# Those are all things which I need to create the table in the paper
jollyae_petri_yes_cox <- coxph(Surv(germ_time, status) ~ treatment, data=jollyae_petri_yes)
summary(jollyae_petri_yes_cox)
# X^2 = 0.02
# df = 1
# p = 0.9
#
#
#
############################## jollyae semi yes survival analysis #######################################
#
#
#
# This is the survival analysis for seeds dispersed by microcebus jollyae in the semi-shaded plot experiment
jollyae_semi_yes
nrow(jollyae_semi_yes)
##### Creating a status colum to indicate that all of the seeds germinated at some point
jollyae_semi_yes$status <- rep(1, times = 233, length.out = NA, each = 1)
#### Next we use the survival function to make a survival curve
jollyae_semi_yes_km_fit <- survfit(Surv(germ_time, status) ~ treatment, data = jollyae_semi_yes)
jollyae_semi_yes_km_fit
# This give a nice summary of the analysis
summary(jollyae_semi_yes_km_fit, times = c(1,15,30,45,60,75,90))
# Next we plot the survival fit and make it look like the graph in the paper
jollyae_semi_yes_km_plot <- autoplot(jollyae_semi_yes_km_fit)
jollyae_semi_yes_km_plot
jollyae_semi_yes_km_plot + labs(title = "Microcebus jollyae",subtitle = "Semi-shaded experiment",
y = "Probability of germinating", x = "Time (days)") +
theme(plot.title = element_text(face = "italic")) +
scale_color_manual(values=c("darkgreen", "darkorange3")) +
scale_fill_manual(values=c("darkgreen", "darkorange3")) +
geom_text(x=75, y=.2, label="p = 0.2") + theme(legend.position="bottom")
# One problem though is that this graph is upside down. I used scale_y_reverse() to reverse the scale,
# but now the numbers are wrong and the annotated p value is gone.
jollyae_semi_yes_km_plot + labs(title = "Microcebus jollyae",subtitle = "Semi-shaded experiment",
y = "Probability of germinating", x = "Time (days)") +
theme(plot.title = element_text(face = "italic")) +
scale_color_manual(values=c("darkgreen", "darkorange3")) +
scale_fill_manual(values=c("darkgreen", "darkorange3")) +
geom_text(x=75, y=.75, label="p = 0.2") + theme(legend.position="bottom") + scale_y_reverse()
# This the the Cox test with fragility
# The summary includes the Chi square value, the degrees of freedom and the p-value
# Those are all things which I need to create the table in the paper
jollyae_semi_yes_cox <- coxph(Surv(germ_time, status) ~ treatment, data=jollyae_semi_yes)
summary(jollyae_semi_yes_cox)
# X^2 = 1.4
# df = 1
# p = 0.2
#
#
#
############################## jollyae closed yes survival analysis #######################################
#
#
#
# This is the survival analysis for seeds dispersed by microcebus jollyae in the Shaded plot experiment
jollyae_closed_yes
nrow(jollyae_closed_yes)
##### Creating a status colum to indicate that all of the seeds germinated at some point
jollyae_closed_yes$status <- rep(1, times = 61, length.out = NA, each = 1)
#### Next we use the survival function to make a survival curve
jollyae_closed_yes_km_fit <- survfit(Surv(germ_time, status) ~ treatment, data = jollyae_closed_yes)
jollyae_closed_yes_km_fit
# This give a nice summary of the analysis
summary(jollyae_closed_yes_km_fit, times = c(1,15,30,45,60,75,90))
# Next we plot the survival fit and make it look like the graph in the paper
jollyae_closed_yes_km_plot <- autoplot(jollyae_closed_yes_km_fit)
jollyae_closed_yes_km_plot
jollyae_closed_yes_km_plot + labs(title = "Microcebus jollyae",subtitle = "Shaded experiment",
y = "Probability of germinating", x = "Time (days)") +
theme(plot.title = element_text(face = "italic")) +
scale_color_manual(values=c("darkgreen", "darkorange3")) +
scale_fill_manual(values=c("darkgreen", "darkorange3")) +
geom_text(x=75, y=.2, label="p = .7") + theme(legend.position="bottom")
# One problem though is that this graph is upside down. I used scale_y_reverse() to reverse the scale,
# but now the numbers are wrong and the annotated p value is gone.
jollyae_closed_yes_km_plot + labs(title = "Microcebus jollyae",subtitle = "closed-shaded experiment",
y = "Probability of germinating", x = "Time (days)") +
theme(plot.title = element_text(face = "italic")) +
scale_color_manual(values=c("darkgreen", "darkorange3")) +
scale_fill_manual(values=c("darkgreen", "darkorange3")) +
geom_text(x=75, y=.75, label="p = .7") + theme(legend.position="bottom") + scale_y_reverse()
# This the the Cox test with fragility
# The summary includes the Chi square value, the degrees of freedom and the p-value
# Those are all things which I need to create the table in the paper
jollyae_closed_yes_cox <- coxph(Surv(germ_time, status) ~ treatment, data=jollyae_closed_yes)
summary(jollyae_closed_yes_cox)
# X^2 = 0.17
# df = 1
# p = .7
# https://rviews.rstudio.com/2017/09/25/survival-analysis-with-r/
################################# The End ########################################
rufus_petri_yes_summary <- rufus_petri_yes %>%
group_by(scientificName, treatment) %>%
summarise(seedling_mean = mean(seedling_mm), germ_time = mean(germ_time), germ_ratio = mean(ratio),
N = n())
rufus_petri_yes_summary
rufus_petri
rufus_petri_ratio_summary <- rufus_petri %>%
group_by(scientificName, treatment) %>%
summarise( germ_ratio = mean(ratio)/n(),
N = n())
rufus_petri_ratio_summary
rufus_petri_ratio_summary <- rufus_petri %>%
group_by(scientificName, treatment) %>%
summarise( germ_ratio = mean(ratio),
N = n())
rufus_petri_ratio_summary
rufus_petri_ratio_summary_modified <- rufus_petri_ratio_summary[-c(3, 4, 5, 6, 7, 8, 9, 10, 15), ]
rufus_petri_ratio_summary_modified
lme_jollyae_semi_yes_summary_modified1_germ_time <- lmer(data = jollyae_semi_yes_summary_modified, germ_time ~ treatment + (1 | scientificName), REML = FALSE)
summary(lme_jollyae_semi_yes_summary_modified1_germ_time)
null5 <- lmer(data = jollyae_semi_yes_summary_modified, germ_time ~ 1 + (1 | scientificName), REML = FALSE)
summary(null5)
anova(null5, lme_jollyae_semi_yes_summary_modified1_germ_time, test = "Chisq")
r.squaredGLMM(lme_jollyae_semi_yes_summary_modified1_germ_time)
lme_jollyae_closed_yes_summary_modified1_germ_time <- lmer(data = jollyae_closed_yes_summary_modified, germ_time ~ treatment + (1 | scientificName), REML = FALSE)
summary(lme_jollyae_closed_yes_summary_modified1_germ_time)
null6 <- lmer(data = jollyae_closed_yes_summary_modified, germ_time ~ 1 + (1 | scientificName), REML = FALSE)
summary(null6)
anova(null6, lme_jollyae_closed_yes_summary_modified1_germ_time, test = "Chisq")
r.squaredGLMM(lme_jollyae_closed_yes_summary_modified1_germ_time)
rufus_petri_ratio_summary_modified
lme_rufus_petri_ratio_summary_modified <- lmer(data = rufus_petri_ratio_summary_modified, germ_ratio ~ treatment + (1 | scientificName), REML = FALSE)
summary(lme_rufus_petri_ratio_summary_modified)
null7 <- lmer(data = lme_rufus_petri_ratio_summary_modified, germ_ratio ~ 1 + (1 | scientificName), REML = FALSE)
summary(null7)
null7 <- lmer(data = lme_rufus_petri_ratio_summary_modified, germ_ratio ~ 1 + (1 | scientificName), REML = FALSE)
summary(null7)
null7 <- lmer(data = rufus_petri_ratio_summary_modified, germ_ratio ~ 1 + (1 | scientificName), REML = FALSE)
summary(null7)
summary(lme_rufus_petri_ratio_summary_modified)
anova(null7, lme_rufus_petri_ratio_summary_modified, test = "Chisq")
r.squaredGLMM(lme_rufus_petri_ratio_summary_modified)
rufus_ground_ratio_summary <- rufus_ground %>%
group_by(scientificName, treatment) %>%
summarise( germ_ratio = mean(ratio),
N = n())
rufus_ground_ratio_summary_modified <- rufus_ground_ratio_summary[-c(3, 4, 5, 6, 7, 8, 9, 10, 15), ]
rufus_ground_ratio_summary_modified
rufus_ground_ratio_summary
rufus_ground_ratio_summary_modified <- rufus_ground_ratio_summary[-c(1, 2, 3, 8), ]
rufus_ground_ratio_summary_modified
lme_rufus_ground_ratio_summary_modified <- lmer(data = rufus_ground_ratio_summary_modified, germ_ratio ~ treatment + (1 | scientificName), REML = FALSE)
summary(lme_rufus_ground_ratio_summary_modified)
null8 <- lmer(data = rufus_ground_ratio_summary_modified, germ_ratio ~ 1 + (1 | scientificName), REML = FALSE)
summary(null8)
anova(null8, lme_rufus_ground_ratio_summary_modified, test = "Chisq")
r.squaredGLMM(lme_rufus_ground_ratio_summary_modified)
jollyae_petri_ratio_summary <- jollyae_petri %>%
group_by(scientificName, treatment) %>%
summarise( germ_ratio = mean(ratio),
N = n())
jollyae_petri_ratio_summary
jollyae_petri_ratio_summary_modified <- jollyae_petri_ratio_summary
# Now for the model
lme_jollyae_petri_ratio_summary_modified <- lmer(data = jollyae_petri_ratio_summary_modified, germ_ratio ~ treatment + (1 | scientificName), REML = FALSE)
summary(lme_jollyae_petri_ratio_summary_modified)
null9 <- lmer(data = jollyae_petri_ratio_summary_modified, germ_ratio ~ 1 + (1 | scientificName), REML = FALSE)
summary(null9)
anova(null9, lme_jollyae_petri_ratio_summary_modified, test = "Chisq")
r.squaredGLMM(lme_jollyae_petri_ratio_summary_modified)
jollyae_semi_ratio_summary <- jollyae_semi %>%
group_by(scientificName, treatment) %>%
summarise( germ_ratio = mean(ratio),
N = n())
jollyae_semi_ratio_summary
0.5011694
jollyae_semi_ratio_summary <- jollyae_semi %>%
group_by(scientificName, treatment) %>%
summarise( germ_ratio = mean(ratio),
N = n())
jollyae_semi_ratio_summary_modified <- jollyae_semi_ratio_summary
jollyae_semi_ratio_summary_modified
jollyae_petri_ratio_summary_modified
jollyae_semi_ratio_summary
lme_jollyae_semi_ratio_summary_modified <- lmer(data = jollyae_semi_ratio_summary_modified, germ_ratio ~ treatment + (1 | scientificName), REML = FALSE)
summary(lme_jollyae_semi_ratio_summary_modified)
null10 <- lmer(data = jollyae_semi_ratio_summary_modified, germ_ratio ~ 1 + (1 | scientificName), REML = FALSE)
summary(null10)
anova(null10, lme_jollyae_semi_ratio_summary_modified, test = "Chisq")
r.squaredGLMM(lme_jollyae_semi_ratio_summary_modified)
jollyae_closed_ratio_summary <- jollyae_closed %>%
group_by(scientificName, treatment) %>%
summarise( germ_ratio = mean(ratio),
N = n())
jollyae_closed_ratio_summary
jollyae_closed_ratio_summary_modified <- jollyae_closed_ratio_summary[-c(5), ]
lme_jollyae_closed_ratio_summary_modified <- lmer(data = jollyae_closed_ratio_summary_modified, germ_ratio ~ treatment + (1 | scientificName), REML = FALSE)
summary(lme_jollyae_closed_ratio_summary_modified)
null11 <- lmer(data = jollyae_closed_ratio_summary_modified, germ_ratio ~ 1 + (1 | scientificName), REML = FALSE)
summary(null11)
anova(null11, lme_jollyae_closed_ratio_summary_modified, test = "Chisq")
r.squaredGLMM(lme_jollyae_closed_ratio_summary_modified)
rufus_petri_yes_km_fit
summary(rufus_petri_yes_km_fit, times = c(1,15,30,45,60,75,90))
rufus_petri_yes_km_plot <- autoplot(rufus_petri_yes_km_fit)
rufus_petri_yes_km_plot + labs(title = "Microcebus rufus",subtitle = "Petri dish experiment",
y = "Probability of germinating", x = "Time (days)") +
theme(plot.title = element_text(face = "italic")) +
scale_color_manual(values=c("darkgreen", "darkorange3")) +
scale_fill_manual(values=c("darkgreen", "darkorange3")) +
geom_text(x=75, y=.2, label="p < 0.0001") + theme(legend.position="bottom")
# Next we plot the survival fit and make it look like the graph in the paper
rufus_petri_yes_km_plot <- autoplot(rufus_petri_yes_km_fit)
rufus_petri_yes_km_plot + labs(title = "Microcebus rufus",subtitle = "Petri dish experiment",
y = "Probability of germinating", x = "Time (days)") +
theme(plot.title = element_text(face = "italic")) +
scale_color_manual(values=c("darkgreen", "darkorange3")) +
scale_fill_manual(values=c("darkgreen", "darkorange3")) +
geom_text(x=75, y=.2, label="p < 0.0001") + theme(legend.position="bottom")
# Next we plot the survival fit and make it look like the graph in the paper
rufus_petri_yes_km_plot <- autoplot(rufus_petri_yes_km_fit)
rufus_petri_yes_km_plot + labs(title = "Microcebus rufus",subtitle = "Petri dish experiment",
y = "Probability of germinating", x = "Time (days)") +
theme(plot.title = element_text(face = "italic")) +
scale_color_manual(values=c("darkgreen", "darkorange3")) +
scale_fill_manual(values=c("darkgreen", "darkorange3")) +
geom_text(x=75, y=.2, label="p < 0.0001") + theme(legend.position="bottom")
library(lme4)
library(ggplot2)
library(ggfortify)
library(Hmisc)
library(ggpubr)
library(MuMIn)
library(tidyverse)
library(survival)
data <- read.csv("mouse_lemur_data.csv", header = TRUE)
data$species_number <- as.numeric(as.factor(data$scientificName))
data$seedling_mm <- as.numeric(data$seedling_length_mm)
data$germ_time <- as.numeric(data$germination_time)
data$ratio <- as.numeric( factor(data$germination_state) ) - 1
# Subsetting the data to only include seeds dispersed by microcebus rufus
rufus <- subset(data, disperser == "microcebus_rufus")
# Subsetting the data to only include seeds dispersed by microcebus rufus in the petri dish experiment
rufus_petri <- subset(rufus, experiment == "Petri dish")
nrow(rufus_petri)
# The number of total observations in the experiment is 685
# Now, I am subsettung the data to only have seeds which germinated
rufus_petri_yes <- subset(rufus_petri, germination_state == "yes")
nrow(rufus_petri_yes)
# The number of germinated seeds is 121
# This creates summary statistics for seedling growth for each species
rufus_petri_yes_summary <- rufus_petri_yes %>%
group_by(scientificName, treatment) %>%
summarise(seedling_mean = mean(seedling_mm),
N = n())
####  This line modifies the summary statistics to include only the species for which there is a defecated and control. This step was not explicitly stated anywhere in the paper and it took me a very long time to figure it out.
rufus_petri_yes_summary_modified <- rufus_petri_yes_summary[-c(3, 4, 5, 6, 7, 12), ]
rufus_petri_yes_summary_modified
sum(rufus_petri_yes_summary_modified$N)
# 88
# Subsetting the data to only include seeds dispersed by microcebus rufus in the forest ground experiment
rufus_ground <- subset(rufus, experiment == "Forest ground")
nrow(rufus_ground)
# The number of total observations in the experiment is 231
# Now, I am subsettung the data to only have seeds which germinated
rufus_ground_yes <- subset(rufus_ground, germination_state == "yes")
nrow(rufus_ground_yes)
#The number of germinated seeds is 7
jollyae <- subset(data, disperser == "microcebus_jollyae")
jollyae_petri <- subset(jollyae, experiment == "Petri dish")
jollyae_closed <- subset(jollyae, experiment == "Closed")
jollyae_semi <- subset(jollyae, experiment == "Semi-closed")
jollyae_petri_yes <- subset(jollyae_petri, germination_state == "yes")
jollyae_closed_yes <- subset(jollyae_closed, germination_state == "yes")
jollyae_semi_yes <- subset(jollyae_semi, germination_state == "yes")
ggplot(data = rufus_petri_yes, aes(x = treatment, y = seedling_mm)) +
geom_point() + theme_bw() + geom_violin( aes(colour = treatment, fill = treatment)) +
stat_summary(fun = mean, geom="point", shape=23, size=5, fill = "black") +
labs(title = "Microcebus rufus",subtitle = "Petri dish",
y = "mean seedling length (mm)", x = "Treatment") +
theme(plot.title = element_text(face = "italic")) +
theme(plot.subtitle = element_text(hjust = 0.5)) +
scale_color_manual(values=c("darkgreen", "darkorange3")) +
scale_fill_manual(values=c("darkgreen", "darkorange3")) +
theme(legend.position = "None")
# This caption is to be added later using word (as done in the original study)
#  N = 37(75) 51(75)
# First we have the Petri dish experiment
plot1 <- ggplot(data = jollyae_petri_yes, aes(x = treatment, y = seedling_mm)) +
theme_bw() + geom_violin( aes(colour = treatment, fill = treatment)) +
stat_summary(fun = mean, geom="point", shape=23, size=5, fill = "black") +
ylim(0,50) +
labs(title = "Microcebus jollyae",subtitle = "Petri dish",
y = "mean seedling length (mm)", x = "Treatment") +
theme(plot.title = element_text(face = "italic")) +
theme(plot.subtitle = element_text(hjust = 0.5)) +
scale_color_manual(values=c("darkgreen", "darkorange3")) +
scale_fill_manual(values=c("darkgreen", "darkorange3")) +
theme(legend.position = "None")
# Next we have the semi-shaded plots
plot2 <- ggplot(data = jollyae_semi_yes, aes(x = treatment, y = seedling_mm)) +
theme_bw() + geom_violin( aes(colour = treatment, fill = treatment)) +
stat_summary(fun = mean, geom="point", shape=23, size=5, fill = "black") +
ylim(0,50) +
labs(title = "",subtitle = "Semi-shaded",
y = "mean seedling length (mm)", x = "Treatment") +
theme(plot.title = element_text(face = "italic")) +
theme(plot.subtitle = element_text(hjust = 0.5)) +
scale_color_manual(values=c("darkgreen", "darkorange3")) +
scale_fill_manual(values=c("darkgreen", "darkorange3")) +
theme(legend.position = "None") +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.title.y = element_blank())
# Then we have the shaded plots
plot3 <- ggplot(data = jollyae_closed_yes, aes(x = treatment, y = seedling_mm)) +
theme_bw() + geom_violin( aes(colour = treatment, fill = treatment)) +
stat_summary(fun = mean, geom="point", shape=23, size=5, fill = "black") +
ylim(0,50) +
labs(title = "",subtitle = "Shaded",
y = "mean seedling length (mm)", x = "Treatment") +
theme(plot.title = element_text(face = "italic")) +
theme(plot.subtitle = element_text(hjust = 0.5)) +
scale_color_manual(values=c("darkgreen", "darkorange3")) +
scale_fill_manual(values=c("darkgreen", "darkorange3")) +
theme(legend.position = "None") +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.title.y = element_blank())
# Now I will add them together
ggarrange(plot1, plot2, plot3, ncol = 3, nrow = 1)
# Just like the first graph, a caption is to be added later using word (as done in the original study)
# Creating a status colum to indicate that all of the seeds germinated at some point
rufus_petri_yes$status <- rep(1, times = 121, length.out = NA, each = 1)
# Next we use the survival function to make a survival curve
rufus_petri_yes_km_fit <- survfit(Surv(germ_time, status) ~ treatment, data = rufus_petri_yes)
# This give a nice summary of the analysis
summary(rufus_petri_yes_km_fit, times = c(1,15,30,45,60,75,90))
# Next we plot the survival fit and make it look like the graph in the paper
rufus_petri_yes_km_plot <- autoplot(rufus_petri_yes_km_fit)
rufus_petri_yes_km_plot + labs(title = "Microcebus rufus",subtitle = "Petri dish experiment",
y = "Probability of germinating", x = "Time (days)") +
theme(plot.title = element_text(face = "italic")) +
scale_color_manual(values=c("darkgreen", "darkorange3")) +
scale_fill_manual(values=c("darkgreen", "darkorange3")) +
geom_text(x=75, y=.2, label="p < 0.0001") + theme(legend.position="bottom")
summary(rufus_petri_yes_cox)
View(rufus_petri_ratio_summary)
jollyae_petri_yes_km_fit <- survfit(Surv(germ_time, status) ~ treatment, data = jollyae_petri_yes)
jollyae_petri_yes_km_fit
jollyae_petri_yes_km_plot <- autoplot(jollyae_petri_yes_km_fit)
jollyae_petri_yes_km_plot
jollyae_petri_yes_km_plot + labs(title = "Microcebus jollyae",subtitle = "Petri dish experiment",
y = "Probability of germinating", x = "Time (days)") +
theme(plot.title = element_text(face = "italic")) +
scale_color_manual(values=c("darkgreen", "darkorange3")) +
scale_fill_manual(values=c("darkgreen", "darkorange3")) +
geom_text(x=75, y=.2, label="p < 0.0001") + theme(legend.position="bottom")
nrow(jollyae_petri_yes)
sum(jollyae_semi_yes_summary_modified$N)
