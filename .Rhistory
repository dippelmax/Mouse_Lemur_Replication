data$seedling_mm <- as.numeric(data$seedling_length_mm)
data$germ_time <- as.numeric(data$germination_time)
# Subsetting the data to only include seeds dispersed by microcebus rufus
rufus <- subset(data, disperser == "microcebus_rufus")
rufus_petri <- subset(rufus, experiment == "Petri dish")
nrow(rufus_petri)
# 685
rufus_petri_yes <- subset(rufus_petri, germination_state == "yes")
nrow(rufus_petri_yes)
# 121
# This creates summary statistics for seedling growth for each species
rufus_petri_yes_summary <- rufus_petri_yes %>%
group_by(scientificName, treatment) %>%
summarise(seedling_mean = mean(seedling_mm),
N = n())
####  This line modifies the summary statistics to include only the species for which there is a defecated and control
rufus_petri_yes_summary_modified <- rufus_petri_yes_summary[-c(3, 4, 5, 6, 7, 12), ]
rufus_petri_yes_summary_modified
sum(rufus_petri_yes_summary_modified$N)
# 88
# Number of total observations in experiment is 685
# Number of observations germinated is 121
# Number of observations after only including species
# with defecated and control seeds is 88
# Paper states 150 is total sample size
# Paper states 88 are actually analyzed
# The researchers seemed to have used the final summary (n=88) for
# the number of observations actually analyzed (n=88)
# I do not know where the number 150 as the total number of observations comes from
rufus_ground <- subset(rufus, experiment == "Forest ground")
nrow(rufus_ground)
# 231
rufus_ground_yes <- subset(rufus_ground, germination_state == "yes")
nrow(rufus_ground_yes)
# 7
# This experiment does not need a filtering for only species with defecated
# and control seeds because they are all the same species
# Number of total observations in experiment is 231
# Number of observations germinated is 7
# Number of observations after only including species
# with defecated and control seeds is 7 (they are all the same species)
# Paper states 75 is total sample size
# Paper states 7 are actually analyzed
# The researchers seemed to have used the final summary (n=7) for
# the number of observations actually analyzed (n=7)
# I do not know where the number 75 as the total number of observations comes from
# Subsetting the data to only include seeds dispersed by microcebus jollyae
jollyae <- subset(data, disperser == "microcebus_jollyae")
# Subsetting the jollyae data to only include seeds in the petri dish experiment
jollyae_petri <- subset(jollyae, experiment == "Petri dish")
nrow(jollyae_petri)
# 528
jollyae_petri_yes <- subset(jollyae_petri, germination_state == "yes")
nrow(jollyae_petri_yes)
# 70
# This creates summary statistics for seedling growth for each species
jollyae_petri_yes_summary <- jollyae_petri_yes %>%
group_by(scientificName, treatment) %>%
summarise(seedling_mean = mean(seedling_mm),
N = n())
####  This line modifies the summary statistics to include only the species for which there is a defecated and control
jollyae_petri_yes_summary_modified <- jollyae_petri_yes_summary[-c(1, 2, 3), ]
jollyae_petri_yes_summary_modified
sum(jollyae_petri_yes_summary_modified$N)
# 25
# Number of total observations in experiment is 528
# Number of observations germinated is 70
# Number of observations after only including species
# with defecated and control seeds is 25
# Paper states 528 is total sample size
# Paper states 70 are actually analyzed
# The researchers seemed to have used all of the observations germinated (n=70) for
# the number of observations actually analyzed (70)
# Subsetting the jollyae data to only include seeds in the shaded plot experiment
jollyae_closed <- subset(jollyae, experiment == "Closed")
nrow(jollyae_closed)
# 694
jollyae_closed_yes <- subset(jollyae_closed, germination_state == "yes")
nrow(jollyae_closed_yes)
# 61
# This creates summary statistics for seedling growth for each species
jollyae_closed_yes_summary <- jollyae_closed_yes %>%
group_by(scientificName, treatment) %>%
summarise(seedling_mean = mean(seedling_mm),
N = n())
####  This line modifies the summary statistics to include only the species for which there is a defecated and control
jollyae_closed_yes_summary_modified <- jollyae_closed_yes_summary[-c(5, 6), ]
jollyae_closed_yes_summary_modified
sum(jollyae_closed_yes_summary_modified$N)
#43
# Number of total observations in experiment is 694
# Number of observations germinated is 61
# Number of observations after only including species
# with defecated and control seeds is 43
# Paper states 377 is total sample size
# Paper states 47 are actually analyzed
# The researchers seemed to have added the 4 seeds from	voampoalahy from the final summary (n=43)
# to make the number of observations analyzed 47
# I do not know where the number 377 as the total observations in the experiment comes from
# Subsetting the jollyae data to only include seeds in the semi-shaded plot experiment
jollyae_semi <- subset(jollyae, experiment == "Semi-closed")
nrow(jollyae_semi)
# 660
jollyae_semi_yes <- subset(jollyae_semi, germination_state == "yes")
nrow(jollyae_semi_yes)
# 233
# This creates summary statistics for seedling growth for each species
jollyae_closed_yes_summary <- jollyae_closed_yes %>%
group_by(scientificName, treatment) %>%
summarise(seedling_mean = mean(seedling_mm),
N = n())
####  This line modifies the summary statistics to include only the species for which there is a defecated and control
jollyae_closed_yes_summary_modified <- jollyae_closed_yes_summary[-c(5, 6), ]
jollyae_closed_yes_summary_modified
sum(jollyae_closed_yes_summary_modified$N)
############## Analysis 1: mixed effect models ###################
rufus_petri_yes_summary <- rufus_petri_yes %>%
group_by(scientificName, treatment) %>%
summarise(seedling_mean = mean(seedling_mm),
N = n())
####  This line modifies the summary statistics to include only the species for which there is a germinated and
rufus_petri_yes_summary_modified <- rufus_petri_yes_summary[-c(3, 4, 5, 6, 7, 12), ]
rufus_petri_yes_summary_modified
# only certain species have a defecated and control treatment
# N is finally 88
# REML = TRUE, intercept model
lme_rufus_petri_yes_summary_modified1 <- lmer(data = rufus_petri_yes_summary_modified, mean ~ treatment + (1 | scientificName))
summary(lme_rufus_petri_yes_summary_modified1)
# Not the correct beta
# REML = FALSE, intercept model
lme_rufus_petri_yes_summary_modified2 <- lmer(data = rufus_petri_yes_summary_modified, mean ~ treatment + (1 | scientificName), REML = FALSE)
summary(lme_rufus_petri_yes_summary_modified2)
# not the correct beta
# REML = TRUE , slope model
lme_rufus_petri_yes_summary_modified3 <- lmer(data = rufus_petri_yes_summary_modified, mean ~ treatment + (1 + treatment | scientificName))
summary(lme_rufus_petri_yes_summary_modified3)
# will not run, too many effects
# REML = FALSE , slope model
lme_rufus_petri_yes_summary_modified4 <- lmer(data = rufus_petri_yes_summary_modified, mean ~ treatment + (1 + treatment | scientificName), REML = FALSE)
summary(lme_rufus_petri_yes_summary_modified4)
# will not run, too many effects
# REML = TRUE , slope and intercept
lme_rufus_petri_yes_summary_modified4 <- lmer(data = rufus_petri_yes_summary_modified, mean ~ treatment + (1 + treatment | scientificName))
summary(lme_rufus_petri_yes_summary_modified4)
# will not run, too many effects
# REML = FALSE , slope and intercept model
lme_rufus_petri_yes_summary_modified5 <- lmer(data = rufus_petri_yes_summary_modified, mean ~ treatment + (1 | scientificName) + (1 + treatment | scientificName), REML = FALSE)
summary(lme_rufus_petri_yes_summary_modified4)
# will not run, too many effects
################ Graph 1: violins ###################
# Mean seedling length after three-month monitoring of planted seed
# The violin represents the variation of germination time and seedling length after three months
ggplot(data = rufus_petri_yes, aes(x = treatment, y = seedling_mm)) +
geom_point() + theme_bw() + geom_violin( aes(colour = treatment, fill = treatment)) +
stat_summary(fun = mean, geom="point", shape=23, size=5, fill = "black") +
labs(title = "Microcebus rufus",subtitle = "Petri dish",
y = "mean seedling length (mm)", x = "Treatment") +
theme(plot.title = element_text(face = "italic")) +
theme(plot.subtitle = element_text(hjust = 0.5)) +
scale_color_manual(values=c("darkgreen", "darkorange3")) +
scale_fill_manual(values=c("darkgreen", "darkorange3")) +
theme(legend.position = "None")
#  N = 37(75) 51(75)
plot1 <- ggplot(data = jollyae_petri_yes, aes(x = treatment, y = seedling_mm)) +
theme_bw() + geom_violin( aes(colour = treatment, fill = treatment)) +
stat_summary(fun = mean, geom="point", shape=23, size=5, fill = "black") +
ylim(0,50) +
labs(title = "Microcebus jollyae",subtitle = "Petri dish",
y = "mean seedling length (mm)", x = "Treatment") +
theme(plot.title = element_text(face = "italic")) +
theme(plot.subtitle = element_text(hjust = 0.5)) +
scale_color_manual(values=c("darkgreen", "darkorange3")) +
scale_fill_manual(values=c("darkgreen", "darkorange3")) +
theme(legend.position = "None")
plot1
plot2 <- ggplot(data = jollyae_semi_yes, aes(x = treatment, y = seedling_mm)) +
theme_bw() + geom_violin( aes(colour = treatment, fill = treatment)) +
stat_summary(fun = mean, geom="point", shape=23, size=5, fill = "black") +
ylim(0,50) +
labs(title = "",subtitle = "Semi-shaded",
y = "mean seedling length (mm)", x = "Treatment") +
theme(plot.title = element_text(face = "italic")) +
theme(plot.subtitle = element_text(hjust = 0.5)) +
scale_color_manual(values=c("darkgreen", "darkorange3")) +
scale_fill_manual(values=c("darkgreen", "darkorange3")) +
theme(legend.position = "None") +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.title.y = element_blank())
plot2
plot3 <- ggplot(data = jollyae_closed_yes, aes(x = treatment, y = seedling_mm)) +
theme_bw() + geom_violin( aes(colour = treatment, fill = treatment)) +
stat_summary(fun = mean, geom="point", shape=23, size=5, fill = "black") +
ylim(0,50) +
labs(title = "",subtitle = "Shaded",
y = "mean seedling length (mm)", x = "Treatment") +
theme(plot.title = element_text(face = "italic")) +
theme(plot.subtitle = element_text(hjust = 0.5)) +
scale_color_manual(values=c("darkgreen", "darkorange3")) +
scale_fill_manual(values=c("darkgreen", "darkorange3")) +
theme(legend.position = "None") +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.title.y = element_blank())
plot3
ggarrange(plot1, plot2, plot3, ncol = 3, nrow = 1)
# Points of departure
# Christmas colors
# Included all points (original graph cut of at 60 with an "a" on top)
# Notes
# As seen by the font differences on the original graph,
# the N numbers were written in word
# Semi-shaded violin plot points missing >10 on replication
##################### graph 2, survival analysis #######################
rufus_petri_yes
ggplot(data = rufus_ground_yes, aes(x = germ_time, y = 1-cumsum(germ_time)/sum(germ_time))) + geom_line()
# install.packages("survival")
library(survival)
?coxph()
# install.packages("KMsurv")
library(KMsurv)
?lifetab()
date <- c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2)
site <- c(1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2)
days <- c(9, 13, 21, 21, 21, 7, 9, 11, 17, 21, 5, 7, 9, 9, 11, 15, 5, 7, 7, 9)
status <- c(1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1)
fake_data <- cbind(date, site, days, status)
fake_data2 <- data.frame(fake_data)
rufus_petri_yes
cox.date <- coxph(Surv(days, status) ~ date + site, data=fake_data2)
print(summary(cox.date))
cox_mod1 <-
# https://rviews.rstudio.com/2017/09/25/survival-analysis-with-r/
Surv()
data.df <- data.frame()
t.endpts <- c(33,33,33,33,23,23,23)
# Create vector of numbers of lost seeds in intervals,
# with the number for the last interval including ungerminated seeds that remain
nlost <-rep(0, length(t.endpts)-1)
nlost[length(nlost)] <- data.df$n.planted - data.df$n.germ.total
# Create vector of numbers of germination events in intervals
nevent <- c(as.vector(data.df[1, 6:16], mode="integer"), 0)
# Create life table
life.table <- lifetab(t.endpts, 100, nlost, nevent)
print(life.table)
# Plot the life-table survivor function
# plot(t.endpts[1:12], life.table[, 5], type="o", pch=16, lwd=2, ylim=c(0,1),
main="Life-Table Survivor Function", xlab="time [days]", ylab="probability
of not germinating")
######################### sample code for a survival graph ##########################
#############################################
library(survival)
time <- c(20, 20, 30, 30)
status <- c(1, 1, 1, 1)
Surv(time, status)
km_fit <- survfit(Surv(time, status) ~ 1)
km_fit
summary(km_fit, times = c(1,30,60,90*(1:10)))
autoplot(km_fit)
rufus_petri_yes
nrows(rufus_petri_yes)
nrow(rufus_petri_yes)
variable <- rep(1, times = 121, length.out = NA, each = 1)
rufus_petri_yes
rufus_petri_yes$status <- rep(1, times = 121, length.out = NA, each = 1)
with(rufus_petri_yes, Surv(germ_time, status))
km_fit <- survfit(Surv(time, status) ~ 1, data = rufus_petri_yes)
km_fit <- survfit(Surv(germ_time, status) ~ 1, data = rufus_petri_yes)
km_fit
summary(km_fit, times = c(1,15,30,45*(1:10)))
autoplot(km_fit)
plot(km_fit, xlab="Days", main = 'Kaplan Meyer Plot')
plot( 1 - km_fit, xlab="Days", main = 'Kaplan Meyer Plot')
plot(km_fit, xlab="Days", main = 'Kaplan Meyer Plot')
autoplot(km_fit)
View(rufus_petri_yes)
coxph(Surv(germ_time, status) ~ germ_time + treatment, data=rufus_petri_yes)
coxph(Surv(germ_time, status) ~ treatment, data=rufus_petri_yes)
print(summary(rufus_petri_yes_cox))
rufus_petri_yes_cox <- coxph(Surv(germ_time, status) ~ treatment, data=rufus_petri_yes)
summary(rufus_petri_yes_cox)
km_fit2 <- survfit(Surv(germ_time, status) ~ treatment, data = rufus_petri_yes)
km_fit2
summary(km_fit2, times = c(1,15,30,45*(1:10)))
autoplot(km_fit2)
plot(km_fit2, xlab="Days", main = 'Kaplan Meyer Plot')
autoplot(km_fit2)
library(ggfortify)
autoplot(km_fit)
autoplot(km_fit2)
summary(rufus_petri_yes_cox)
rufus_petri_yes
rufus_petri_yes$status <- rep(1, times = 121, length.out = NA, each = 1)
rufus_petri_yes_km_fit <- survfit(Surv(germ_time, status) ~ treatment, data = rufus_petri_yes)
rufus_petri_yes_km_fit
summary(rufus_petri_yes_km_fit, times = c(1,15,30,45*(1:10)))
autoplot(rufus_petri_yes_km_fit)
autoplot(rufus_petri_yes_cox)
cox_plot <- survfit(rufus_petri_yes_cox)
autoplot(cox_plot)
rufus_petri_yes
rufus_petri_yes$status <- rep(1, times = 121, length.out = NA, each = 1)
rufus_petri_yes_km_fit <- survfit(Surv(germ_time, status) ~ treatment, data = rufus_petri_yes)
rufus_petri_yes_km_fit
summary(rufus_petri_yes_km_fit, times = c(1,15,30,45*(1:10)))
rufus_petri_yes_km_plot <- autoplot(rufus_petri_yes_km_fit)
rufus_petri_yes_cox <- coxph(Surv(germ_time, status) ~ treatment, data=rufus_petri_yes)
summary(rufus_petri_yes_cox)
rufus_petri_yes_km_plot +  labs(title = "Microcebus jollyae",subtitle = "Petri dish",
y = "mean seedling length (mm)", x = "Treatment")
rufus_petri_yes_km_plot +  labs(title = "Microcebus rufus",subtitle = "Petri dish experiment",
y = "Probability of germinating", x = "Time (days)") +
theme(plot.title = element_text(face = "italic")) +
theme(plot.subtitle = element_text(hjust = 0.5)) +
scale_color_manual(values=c("darkgreen", "darkorange3")) +
scale_fill_manual(values=c("darkgreen", "darkorange3")) +
theme(legend.position = "None")
rufus_petri_yes_km_plot +  labs(title = "Microcebus rufus",subtitle = "Petri dish experiment",
y = "Probability of germinating", x = "Time (days)") +
theme(plot.title = element_text(face = "italic")) +
theme(plot.subtitle = element_text(hjust = 0.5)) +
scale_color_manual(values=c("darkgreen", "darkorange3")) +
scale_fill_manual(values=c("darkgreen", "darkorange3"))
rufus_petri_yes_km_plot +  labs(title = "Microcebus rufus",subtitle = "Petri dish experiment",
y = "Probability of germinating", x = "Time (days)") +
theme(plot.title = element_text(face = "italic")) +
scale_color_manual(values=c("darkgreen", "darkorange3")) +
scale_fill_manual(values=c("darkgreen", "darkorange3"))
rufus_petri_yes_km_plot +  labs(title = "Microcebus rufus",subtitle = "Petri dish experiment",
y = "Probability of germinating", x = "Time (days)") +
theme(plot.title = element_text(face = "italic")) +
scale_color_manual(values=c("darkgreen", "darkorange3")) +
scale_fill_manual(values=c("darkgreen", "darkorange3")) +
geom_text(x=75, y=1, label="p < 0.0001")
rufus_petri_yes_km_plot +  labs(title = "Microcebus rufus",subtitle = "Petri dish experiment",
y = "Probability of germinating", x = "Time (days)") +
theme(plot.title = element_text(face = "italic")) +
scale_color_manual(values=c("darkgreen", "darkorange3")) +
scale_fill_manual(values=c("darkgreen", "darkorange3")) +
geom_text(x=75, y=.2, label="p < 0.0001")
rufus_petri_yes_km_plot + labs(title = "Microcebus rufus",subtitle = "Petri dish experiment",
y = "Probability of germinating", x = "Time (days)") +
theme(plot.title = element_text(face = "italic")) +
scale_color_manual(values=c("darkgreen", "darkorange3")) +
scale_fill_manual(values=c("darkgreen", "darkorange3")) +
geom_text(x=75, y=.2, label="p < 0.0001") + scale_y_reverse()
rufus_petri_yes
##### Creating a
rufus_petri_yes$status <- rep(0, times = 121, length.out = NA, each = 1)
rufus_petri_yes_km_fit <- survfit(Surv(germ_time, status) ~ treatment, data = rufus_petri_yes)
rufus_petri_yes_km_fit
summary(rufus_petri_yes_km_fit, times = c(1,15,30,45*(1:10)))
rufus_petri_yes_km_plot <- autoplot(rufus_petri_yes_km_fit)
rufus_petri_yes_km_plot + labs(title = "Microcebus rufus",subtitle = "Petri dish experiment",
y = "Probability of germinating", x = "Time (days)") +
theme(plot.title = element_text(face = "italic")) +
scale_color_manual(values=c("darkgreen", "darkorange3")) +
scale_fill_manual(values=c("darkgreen", "darkorange3")) +
geom_text(x=75, y=.2, label="p < 0.0001")
# This is the survival analysis.
rufus_petri_yes
##### Creating a
rufus_petri_yes$status <- rep(1, times = 121, length.out = NA, each = 1)
rufus_petri_yes_km_fit <- survfit(Surv(germ_time, status) ~ treatment, data = rufus_petri_yes)
rufus_petri_yes_km_fit
summary(rufus_petri_yes_km_fit, times = c(1,15,30,45*(1:10)))
rufus_petri_yes_km_plot <- autoplot(rufus_petri_yes_km_fit)
rufus_petri_yes_km_plot + labs(title = "Microcebus rufus",subtitle = "Petri dish experiment",
y = "Probability of germinating", x = "Time (days)") +
theme(plot.title = element_text(face = "italic")) +
scale_color_manual(values=c("darkgreen", "darkorange3")) +
scale_fill_manual(values=c("darkgreen", "darkorange3")) +
geom_text(x=75, y=.2, label="p < 0.0001")
rufus_petri_yes_km_plot + labs(title = "Microcebus rufus",subtitle = "Petri dish experiment",
y = "Probability of germinating", x = "Time (days)") +
theme(plot.title = element_text(face = "italic")) +
scale_color_manual(values=c("darkgreen", "darkorange3")) +
scale_fill_manual(values=c("darkgreen", "darkorange3")) +
geom_text(x=75, y=.2, label="p < 0.0001") + scale_y_reverse()
rufus_petri_yes_km_plot + labs(title = "Microcebus rufus",subtitle = "Petri dish experiment",
y = "Probability of germinating", x = "Time (days)") +
theme(plot.title = element_text(face = "italic")) +
scale_color_manual(values=c("darkgreen", "darkorange3")) +
scale_fill_manual(values=c("darkgreen", "darkorange3")) +
geom_text(x=75, y=.2, label="p < 0.0001") + theme(legend.position="bottom")
rufus_petri_yes_km_plot + labs(title = "Microcebus rufus",subtitle = "Petri dish experiment",
y = "Probability of germinating", x = "Time (days)") +
theme(plot.title = element_text(face = "italic")) +
scale_color_manual(values=c("darkgreen", "darkorange3")) +
scale_fill_manual(values=c("darkgreen", "darkorange3")) +
geom_text(x=75, y=.2, label="p < 0.0001") + scale_y_reverse()
rufus_petri_yes_km_plot + scale_y_reverse() + labs(title = "Microcebus rufus",subtitle = "Petri dish experiment",
y = "Probability of germinating", x = "Time (days)") +
theme(plot.title = element_text(face = "italic")) +
scale_color_manual(values=c("darkgreen", "darkorange3")) +
scale_fill_manual(values=c("darkgreen", "darkorange3")) +
geom_text(x=75, y=.2, label="p < 0.0001") + scale_y_reverse()
rufus_petri_yes_km_plot + labs(title = "Microcebus rufus",subtitle = "Petri dish experiment",
y = "Probability of germinating", x = "Time (days)") +
theme(plot.title = element_text(face = "italic")) +
scale_color_manual(values=c("darkgreen", "darkorange3")) +
scale_fill_manual(values=c("darkgreen", "darkorange3")) +
geom_text(x=75, y=.2, label="p < 0.0001") + theme(legend.position="bottom")
rufus_petri_yes_km_plot + labs(title = "Microcebus rufus",subtitle = "Petri dish experiment",
y = "Probability of germinating", x = "Time (days)") +
theme(plot.title = element_text(face = "italic")) +
scale_color_manual(values=c("darkgreen", "darkorange3")) +
scale_fill_manual(values=c("darkgreen", "darkorange3")) +
geom_text(x=75, y=.2, label="p < 0.0001") + theme(legend.position="bottom") +
guides(fill=guide_legend(title="New Legend Title"))
rufus_petri_yes_km_plot + labs(title = "Microcebus rufus",subtitle = "Petri dish experiment",
y = "Probability of germinating", x = "Time (days)") +
theme(plot.title = element_text(face = "italic")) +
scale_color_manual(values=c("darkgreen", "darkorange3")) +
scale_fill_manual(values=c("darkgreen", "darkorange3")) +
geom_text(x=75, y=.2, label="p < 0.0001") + theme(legend.position="bottom", legend.title = "Treatment:") +
rufus_petri_yes_km_plot + labs(title = "Microcebus rufus",subtitle = "Petri dish experiment",
y = "Probability of germinating", x = "Time (days)") +
theme(plot.title = element_text(face = "italic")) +
scale_color_manual(values=c("darkgreen", "darkorange3")) +
scale_fill_manual(values=c("darkgreen", "darkorange3")) +
geom_text(x=75, y=.2, label="p < 0.0001") + theme(legend.position="bottom", legend.title = "Treatment:")
rufus_petri_yes_km_plot + labs(title = "Microcebus rufus",subtitle = "Petri dish experiment",
y = "Probability of germinating", x = "Time (days)") +
theme(plot.title = element_text(face = "italic")) +
scale_color_manual(values=c("darkgreen", "darkorange3")) +
scale_fill_manual(values=c("darkgreen", "darkorange3")) +
geom_text(x=75, y=.2, label="p < 0.0001") + theme(legend.position="bottom", legend.title = "Treatment:")
rufus_petri_yes_km_plot + labs(title = "Microcebus rufus",subtitle = "Petri dish experiment",
y = "Probability of germinating", x = "Time (days)") +
theme(plot.title = element_text(face = "italic")) +
scale_color_manual(values=c("darkgreen", "darkorange3")) +
scale_fill_manual(values=c("darkgreen", "darkorange3")) +
geom_text(x=75, y=.2, label="p < 0.0001") + theme(legend.position="bottom")
rufus_petri_yes_km_plot + labs(title = "Microcebus rufus",subtitle = "Petri dish experiment",
y = "Probability of germinating", x = "Time (days)") +
theme(plot.title = element_text(face = "italic")) +
scale_color_manual(values=c("darkgreen", "darkorange3")) +
scale_fill_manual(values=c("darkgreen", "darkorange3")) +
geom_text(x=75, y=.2, label="p < 0.0001") + theme(legend.position="bottom", title="New Legend Title")
rufus_petri_yes_km_plot + labs(title = "Microcebus rufus",subtitle = "Petri dish experiment",
y = "Probability of germinating", x = "Time (days)") +
theme(plot.title = element_text(face = "italic")) +
scale_color_manual(values=c("darkgreen", "darkorange3")) +
scale_fill_manual(values=c("darkgreen", "darkorange3")) +
geom_text(x=75, y=.2, label="p < 0.0001") + theme(legend.position="bottom", legend.title="New Legend Title")
rufus_petri_yes_km_plot + labs(title = "Microcebus rufus",subtitle = "Petri dish experiment",
y = "Probability of germinating", x = "Time (days)") +
theme(plot.title = element_text(face = "italic")) +
scale_color_manual(Treatment, values=c("darkgreen", "darkorange3")) +
scale_fill_manual(values=c("darkgreen", "darkorange3")) +
geom_text(x=75, y=.2, label="p < 0.0001") + theme(legend.position="bottom")
rufus_petri_yes_km_plot + labs(title = "Microcebus rufus",subtitle = "Petri dish experiment",
y = "Probability of germinating", x = "Time (days)") +
theme(plot.title = element_text(face = "italic")) +
scale_color_manual(legend(title = "Treatment"), values=c("darkgreen", "darkorange3")) +
scale_fill_manual(values=c("darkgreen", "darkorange3")) +
geom_text(x=75, y=.2, label="p < 0.0001") + theme(legend.position="bottom")
rufus_petri_yes_km_plot + labs(title = "Microcebus rufus",subtitle = "Petri dish experiment",
y = "Probability of germinating", x = "Time (days)") +
theme(plot.title = element_text(face = "italic")) +
scale_color_manual(values=c("darkgreen", "darkorange3")) +
scale_fill_manual(values=c("darkgreen", "darkorange3")) +
geom_text(x=75, y=.2, label="p < 0.0001") + theme(legend.position="bottom")
rufus_petri_yes_km_plot + labs(title = "Microcebus rufus",subtitle = "Petri dish experiment",
y = "Probability of germinating", x = "Time (days)") +
theme(plot.title = element_text(face = "italic")) +
scale_color_manual(values=c("darkgreen", "darkorange3")) +
scale_fill_manual(values=c("darkgreen", "darkorange3")) +
geom_text(x=75, y=.2, label="p < 0.0001") + theme(legend.position="bottom") + scale_y_reverse()
summary(rufus_petri_yes_km_fit)
summary(rufus_petri_yes_km_fit, times = c(1,15,30,45,60,75,90))
rufus_petri_yes_km_plot + labs(title = "Microcebus rufus",subtitle = "Petri dish experiment",
y = "Probability of germinating", x = "Time (days)") +
theme(plot.title = element_text(face = "italic")) +
scale_color_manual(values=c("darkgreen", "darkorange3")) +
scale_fill_manual(values=c("darkgreen", "darkorange3")) +
geom_text(x=75, y=.2, label="p < 0.0001") + theme(legend.position="bottom") + scale_y_reverse()
rufus_petri_yes_km_plot + labs(title = "Microcebus rufus",subtitle = "Petri dish experiment",
y = "Probability of germinating", x = "Time (days)") +
theme(plot.title = element_text(face = "italic")) +
scale_color_manual(values=c("darkgreen", "darkorange3")) +
scale_fill_manual(values=c("darkgreen", "darkorange3")) +
geom_text(x=75, y=.75, label="p < 0.0001") + theme(legend.position="bottom") + scale_y_reverse()
rufus_petri_yes_km_plot + labs(title = "Microcebus rufus",subtitle = "Petri dish experiment",
y = "Probability of germinating", x = "Time (days)") +
theme(plot.title = element_text(face = "italic")) +
scale_color_manual(values=c("darkgreen", "darkorange3")) +
scale_fill_manual(values=c("darkgreen", "darkorange3")) + scale_y_reverse() +
geom_text(x=75, y=.75, label="p < 0.0001") + theme(legend.position="bottom")
summary(rufus_petri_yes_cox)
frac(chi^2 = 41.38)
frac(chi^2)
library(knitr)
frac(chi^2)
jollyae_closed_yes_summary_modified <- jollyae_closed_yes_summary[-c(5, 6), ]
jollyae_closed_yes_summary_modified
sum(jollyae_closed_yes_summary_modified$N)
# Subsetting the jollyae data to only include seeds in the semi-shaded plot experiment
jollyae_semi <- subset(jollyae, experiment == "Semi-closed")
nrow(jollyae_semi)
# 660
jollyae_semi_yes <- subset(jollyae_semi, germination_state == "yes")
nrow(jollyae_semi_yes)
jollyae_semi_yes_summary <- jollyae_semi_yes %>%
group_by(scientificName, treatment) %>%
summarise(seedling_mean = mean(seedling_mm),
N = n())
jollyae_semi_yes_summary
jollyae_semi_yes_summary_modified <- jollyae_semi_yes_summary
jollyae_semi_yes_summary_modified
sum(jollyae_semi_yes_summary_modified$N)
